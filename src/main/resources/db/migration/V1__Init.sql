CREATE SEQUENCE IF NOT EXISTS bucket_sequence START WITH 1 INCREMENT BY 1;
alter table if exists refresh_token drop constraint if exists fk_user_id;
alter table if exists items drop constraint if exists fk_category_id;
alter table if exists buckets_items drop constraint if exists fk_item_id;
alter table if exists user_role drop constraint if exists fk_user_id;
alter table if exists buckets_items drop constraint if exists fk_user_id;
alter table if exists user_feedback drop constraint if exists fk_user_id;
alter table if exists user_feedback drop constraint if exists fk_product_id;
alter table if exists photo drop constraint if exists fk_user_feedback_id;
alter table if exists product_property drop constraint if exists fk_product_id;
alter table if exists product_property drop constraint if exists fk_property_id;

drop table if exists users cascade;
drop table if exists user_role cascade;
drop table if exists category cascade;
drop table if exists categories cascade;
drop table if exists refresh_token cascade;
drop table if exists items cascade;
drop table if exists user_product cascade;
drop table if exists product_property cascade;
drop table if exists property cascade;
drop table if exists photo cascade;
drop table if exists user_feedback cascade;
drop table if exists buckets cascade;
drop table if exists buckets_items cascade;
drop table if exists items_categories cascade;

CREATE SEQUENCE IF NOT EXISTS buckets_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS category_sequence START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS item_sequence START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS refresh_token_token_id_seq START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS user_sequence START WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IF NOT EXISTS users_id_seq START WITH 1 INCREMENT BY 1;

CREATE TABLE buckets
(
    id      BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id BIGINT,
    amount BIGINT,
    CONSTRAINT buckets_pkey PRIMARY KEY (id)
);

CREATE TABLE buckets_items
(
    id  BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id BIGINT NOT NULL,
    item_id   BIGINT NOT NULL,
    count integer NOT NULL
);

create table user_role
(
    user_id bigint not null,
    role varchar(255) not null
);

CREATE TABLE categories
(
    id   BIGINT NOT NULL,
    name VARCHAR(255),
    parent_category VARCHAR(255),
    parent_category_id BIGINT,
    CONSTRAINT categories_pkey PRIMARY KEY (id)
);

CREATE TABLE flyway_schema_history
(
    installed_rank INTEGER       NOT NULL,
    version        VARCHAR(50),
    description    VARCHAR(200)  NOT NULL,
    type           VARCHAR(20)   NOT NULL,
    script         VARCHAR(1000) NOT NULL,
    checksum       INTEGER,
    installed_by   VARCHAR(100)  NOT NULL,
    installed_on   TIMESTAMP WITHOUT TIME ZONE DEFAULT NOW() NOT NULL,
    execution_time INTEGER       NOT NULL,
    success        BOOLEAN       NOT NULL,
    CONSTRAINT flyway_schema_history_pk PRIMARY KEY (installed_rank)
);

CREATE TABLE items
(
    price       BIGINT NOT NULL,
    id          BIGINT NOT NULL,
    count       bigint,
    description VARCHAR(255),
    image       VARCHAR(255),
    name       VARCHAR(255),
    product_property_id bigint not null,
    discount_price bigint,
    discount boolean not null,
    category_id bigint not null,
    CONSTRAINT items_pkey PRIMARY KEY (id)
);

create table property
(
    property_id bigint generated by default as identity,
    product_property_id bigint not null,
    name varchar(255) not null,
    value varchar(255) not null,
    primary key (property_id)
);

create table product_property
(
    product_property_id bigint generated by default as identity,
    primary key (product_property_id)
);

CREATE TABLE items_categories
(
    category_id        BIGINT NOT NULL,
    item_id            BIGINT NOT NULL,
    parent_category_id BIGINT NOT NULL,
    CONSTRAINT items_categories_pkey PRIMARY KEY (category_id, item_id)
);

create table category
(
    category_id bigint generated by default as identity,
    title varchar(255) not null,
    primary key (category_id)
);

CREATE TABLE refresh_token
(
    token_id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id  BIGINT,
    token    VARCHAR(255),
    CONSTRAINT refresh_token_pkey PRIMARY KEY (token_id)
);

CREATE TABLE users
(
    bucket_id BIGINT,
    id        BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    address   VARCHAR(255),
    email     VARCHAR(255),
    password  VARCHAR(255),
    username  VARCHAR(255),
    CONSTRAINT users_pkey PRIMARY KEY (id)
);

create table user_role
(
    user_id bigint not null,
    role varchar(255) not null
);
create table user_feedback
(
    user_feedback_id bigint generated by default as identity,
    user_id bigint not null,
    product_id bigint not null,
    feedback bigint not null,
    comment varchar(500),
    primary key (user_feedback_id)
);

ALTER TABLE buckets
    ADD CONSTRAINT buckets_user_id_key UNIQUE (user_id);

ALTER TABLE refresh_token
    ADD CONSTRAINT refresh_token_user_id_key UNIQUE (user_id);

ALTER TABLE users
    ADD CONSTRAINT users_bucket_id_key UNIQUE (bucket_id);

CREATE INDEX flyway_schema_history_s_idx ON flyway_schema_history (success);

ALTER TABLE buckets_items
    ADD CONSTRAINT fk7272bsc9hv6m7k850ekia6f0w FOREIGN KEY (bucket_id) REFERENCES buckets (id) ON DELETE NO ACTION;

ALTER TABLE buckets_items
    ADD CONSTRAINT fk773jgk471xednobhr8ju3li49 FOREIGN KEY (item_id) REFERENCES items (id) ON DELETE NO ACTION;

ALTER TABLE users
    ADD CONSTRAINT fk8l2qc4c6gihjdyoch727guci FOREIGN KEY (bucket_id) REFERENCES buckets (id) ON DELETE NO ACTION;

ALTER TABLE refresh_token
    ADD CONSTRAINT fkjtx87i0jvq2svedphegvdwcuy FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE NO ACTION;

ALTER TABLE buckets
    ADD CONSTRAINT fknl0ltaj67xhydcrfbq8401nvj FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE NO ACTION;
alter table if exists user_feedback add constraint fk_user_id foreign key (user_id) references "users";
alter table if exists user_feedback add constraint fk_product_id foreign key (product_id) references items;